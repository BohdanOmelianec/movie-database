{"version":3,"sources":["components/appHeader/AppHeader.tsx","components/searchPanel/SearchPanel.tsx","services/MovieService.js","components/appFilter/AppFilter.tsx","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/spinner/Spinner.js","resources/img/movie-poster-coming-soon.png","components/charList/CharList.tsx","components/skeleton/Skeleton.js","components/charInfo/CharInfo.tsx","components/errorBoundary/ErrorBoundary.js","components/app/App.tsx","index.tsx"],"names":["AppHeader","className","href","SearchPanel","type","placeholder","value","this","props","searchStr","onChange","onSearch","Component","MovieService","_apiBase","_posterBase","_searchBase","_genresBase","_apiKey","getResource","url","a","fetch","res","ok","Error","status","json","getPopularMovies","page","end","arr","total_pages","push","results","map","_transformMovies","getMovie","id","_transformMovie","searchMovie","string","getGenres","genres","movie","title","poster","poster_path","release","release_date","genre_ids","overview","homepage","AppFilter","state","error","movieService","onGenresLoaded","setState","onError","renderItems","genre","name","then","catch","content","onGenreSelected","ErrorMessage","style","display","width","height","objectFit","margin","src","alt","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","begin","values","keyTimes","dur","repeatCount","CharList","movies","start","loading","newItemLoading","getMovies","onMoviesLoaded","sort","b","reverse","onMoviesListLoading","onPreviousPage","onNextPage","onSearchMovies","filterMovies","selectedGenre","filter","includes","itemRefs","setRef","ref","selectedItem","forEach","item","classList","remove","add","renderMovies","slice","i","posterNotFound","onClick","onMovieSelected","prevProps","items","errorMessage","spinner","contentLength","length","disabled","Skeleton","CharInfo","updateMovie","selectedMovie","onMovieLoading","onMovieLoaded","skeleton","View","genresName","join","posterImg","target","ErrorBoundary","err","info","console","log","children","App","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.374da432.chunk.js","sourcesContent":["import './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <a href=\"/\">\r\n                    <span>Movies</span> information portal\r\n                </a>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><a href=\"/\">Documentation</a></li>\r\n                    /\r\n                    <li><a href=\"/\">Contact us</a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import { Component } from 'react';\r\nimport './searchPanel.scss';\r\n\r\ntype SPProps = {\r\n    searchStr: string;\r\n    onSearch: React.ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\nclass SearchPanel extends Component<SPProps> {\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                    className=\"search__input\"\r\n                    placeholder=\"Search movies\"\r\n                    value={this.props.searchStr}\r\n                    onChange={this.props.onSearch}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","class MovieService {\r\n    _apiBase = 'http://api.themoviedb.org/3/movie/';\r\n    _posterBase = 'http://image.tmdb.org/t/p/w500';\r\n    _searchBase = 'http://api.themoviedb.org/3/search/movie';\r\n    _genresBase = 'http://api.themoviedb.org/3/genre/movie/list';\r\n    _apiKey = 'api_key=f1137cbdf4e49f5e77f6cd84d2971b53';\r\n\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url} status: ${res.status}`);\r\n        }\r\n\r\n        return res.json();\r\n    }\r\n\r\n    getPopularMovies = async (page=1) => {\r\n        let end = false;\r\n        const arr = [];\r\n\r\n        while(!end) {\r\n            const res = await this.getResource(`${this._apiBase}popular/?${this._apiKey}&page=${page}`);\r\n\r\n            if(page === res.total_pages || page === 5) {\r\n                end = true;\r\n            }\r\n\r\n            arr.push(...res.results.map(this._transformMovies));\r\n            page++;\r\n        }\r\n        \r\n        return arr;\r\n    }\r\n\r\n    getMovie = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}${id}?${this._apiKey}`);\r\n\r\n        return this._transformMovie(res)\r\n    }\r\n\r\n    searchMovie = async (string, page=1) => {\r\n        let end = false;\r\n        const arr = [];\r\n\r\n        while(!end) {\r\n            const res = await this.getResource(`${this._searchBase}?${this._apiKey}&query=${string}&page=${page}`)\r\n\r\n            if(page === res.total_pages || page === 5) {\r\n                end = true;\r\n            }\r\n\r\n            arr.push(...res.results.map(this._transformMovies));\r\n            page++;\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    getGenres = async () => {\r\n        const res = await this.getResource(`${this._genresBase}?${this._apiKey}`);\r\n        \r\n        return res.genres;\r\n    }\r\n\r\n    _transformMovies = (movie) => {\r\n        return {\r\n            id: movie.id,\r\n            title: movie.title,\r\n            poster: this._posterBase + movie.poster_path,\r\n            release: movie.release_date,\r\n            genres: movie.genre_ids ? movie.genre_ids : null,\r\n        }\r\n    }\r\n\r\n    _transformMovie = (movie) => {\r\n        return {\r\n            id: movie.id,\r\n            title: movie.title,\r\n            poster: this._posterBase + movie.poster_path,\r\n            overview: movie.overview ? `${movie.overview}...` : \"There is no available overview.\",\r\n            release: movie.release_date,\r\n            genres: movie.genres ? movie.genres : null,\r\n            homepage: movie.homepage ? movie.homepage : null\r\n        }\r\n    }\r\n}\r\n\r\nexport default MovieService;","import { Component } from 'react';\r\nimport MovieService from '../../services/MovieService';\r\n\r\nimport \"./appFilter.scss\";\r\n\r\ntype MyProps = {\r\n    onGenreSelected: React.ChangeEventHandler<HTMLSelectElement>;\r\n};\r\n\r\ntype MyState = {\r\n    genres: string[]; \r\n    error: boolean;\r\n};\r\n\r\nclass AppFilter extends Component<MyProps, MyState> {\r\n    state = {\r\n        genres: [],\r\n        error: false\r\n    }\r\n\r\n    movieService = new MovieService();\r\n\r\n    componentDidMount() {\r\n        this.movieService.getGenres()\r\n            .then(this.onGenresLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onGenresLoaded = (genres: string[]) => {\r\n        this.setState({\r\n            genres\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    renderItems = (arr: {id: number, name: string}[]) => {\r\n        return arr.map(genre => {\r\n            return (\r\n                <option key={genre.id} value={genre.id} >{genre.name}</option>\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {genres} = this.state;\r\n        const content = this.renderItems(genres)\r\n\r\n        return (\r\n            <div className='appFilter'>\r\n                <span className='appFilter__label'>Genres filter: </span>\r\n                <select onChange={this.props.onGenreSelected} className='appFilter__select'>\r\n                    <option></option>\r\n                    {content}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AppFilter;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    const style = {\r\n        display: 'block',\r\n        width: '250px',\r\n        height: '250px',\r\n        objectFit: 'contain',\r\n        margin: '0 auto'\r\n    }\r\n\r\n    return (\r\n        <img style={style} src={error} alt='Error'/>  // process.env.PUBLIC_URL + '/error.gif'\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/movie-poster-coming-soon.7c02dcee.png\";","import { Component } from 'react';\r\nimport MovieService from '../../services/MovieService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport './charList.scss';\r\nimport posterNotFound from '../../resources/img/movie-poster-coming-soon.png';\r\n\r\ntype MoviesArr = {\r\n    title: string;\r\n    poster: string;\r\n    genres: number[];\r\n    release: string;\r\n    id: number;\r\n}[]\r\n\r\ntype CLState = {\r\n    movies: MoviesArr;\r\n    page: number;\r\n    start: number;\r\n    end: number;\r\n    loading: boolean;\r\n    newItemLoading: boolean;\r\n    error: boolean;\r\n}\r\n\r\ntype CLProps = {\r\n    onMovieSelected: Function;\r\n    searchStr: string;\r\n    selectedGenre: string; \r\n}\r\n\r\nclass CharList extends Component<CLProps, CLState> {\r\n    state: CLState = {\r\n        movies: [],\r\n        page: 1,\r\n        start: 0,\r\n        end: 10,\r\n        loading: true,\r\n        newItemLoading: false,\r\n        error: false\r\n    }\r\n\r\n    movieService = new MovieService();\r\n\r\n    componentDidMount() {\r\n        this.getMovies()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: {searchStr: string}) {\r\n        if(this.props.searchStr !== prevProps.searchStr) { \r\n            if(!this.props.searchStr) {\r\n                this.getMovies(); \r\n            } else {\r\n                this.setState({\r\n                    start: 0,\r\n                    end: 10\r\n                })\r\n                this.onMoviesListLoading();\r\n                this.onSearchMovies(this.props.searchStr);  \r\n            }\r\n        }\r\n    }\r\n\r\n    getMovies = () => {\r\n        this.movieService.getPopularMovies()\r\n            .then(this.onMoviesLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onMoviesLoaded = (movies: MoviesArr) => {\r\n        this.setState({\r\n            movies: movies.sort((a, b) => (a.release < b.release) ? -1 : 1).reverse(),\r\n            loading: false,\r\n            newItemLoading: false\r\n        })\r\n    }\r\n\r\n    onMoviesListLoading = () => {\r\n        this.setState({\r\n            newItemLoading: true\r\n        })\r\n    }\r\n\r\n    onPreviousPage = () => {\r\n        this.setState({\r\n            start: this.state.start - 10,\r\n            end: this.state.end - 10\r\n        })\r\n    }\r\n\r\n    onNextPage = () => {\r\n        this.setState({\r\n            start: this.state.start + 10,\r\n            end: this.state.end + 10\r\n        })\r\n    }\r\n\r\n    onSearchMovies = (searchStr: string) => {\r\n        this.movieService.searchMovie(searchStr)\r\n            .then(this.onMoviesLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n    \r\n    filterMovies = (arr: MoviesArr) => {\r\n        if(this.props.selectedGenre) { \r\n            return arr.filter(movie => movie.genres.includes(+this.props.selectedGenre))\r\n        }\r\n        return arr\r\n    }\r\n\r\n    itemRefs: HTMLElement[] = [];\r\n    // Fix selected items after filter\r\n    setRef = (ref: never) => {\r\n        if(ref) {\r\n           this.itemRefs.push(ref); \r\n        } else {\r\n            this.itemRefs = [];\r\n        }\r\n        \r\n    }\r\n\r\n    selectedItem = (id: number) => {\r\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\r\n        this.itemRefs[id].classList.add('char__item_selected');\r\n    }\r\n\r\n    renderMovies = (arr: MoviesArr, start: number, end: number) => {      \r\n        const items = arr.slice(start, end).map((movie, i) => {\r\n\r\n            if(movie.poster === 'https://image.tmdb.org/t/p/w500null') {\r\n                movie.poster = posterNotFound;\r\n            }\r\n\r\n            return (\r\n                <li \r\n                    className=\"char__item\"\r\n                    key={movie.id}\r\n                    ref={this.setRef}\r\n                    onClick={() => {\r\n                        this.props.onMovieSelected(movie);\r\n                        this.selectedItem(i)\r\n                    }}>\r\n                    <img src={movie.poster} alt={movie.title} />\r\n                    <div className=\"char__name\">{movie.title}</div>\r\n                </li>\r\n            )\r\n        });\r\n  \r\n        return items;\r\n    }\r\n\r\n    render() {\r\n        const {movies, start, end, loading, newItemLoading, error} = this.state;\r\n        const items = this.renderMovies(this.filterMovies(movies), start, end);\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading || newItemLoading ? <Spinner/> : null;\r\n        const content = !(loading || newItemLoading || error) ? items : null;\r\n        const contentLength = this.filterMovies(movies).length || 0;\r\n\r\n        return (\r\n            <div className=\"char__list\">\r\n                {errorMessage}\r\n                {spinner}\r\n                <ul className=\"char__grid\">\r\n                    {content}\r\n                </ul>\r\n                <div className='char__buttons'>\r\n                    <button \r\n                        className=\"button button__main button__long\"\r\n                        disabled={(start <= 0) ? true : false}\r\n                        onClick={() => this.onPreviousPage()}\r\n                        >\r\n                        <div className=\"inner\">previous page</div>\r\n                    </button>\r\n                    <button \r\n                        className=\"button button__main button__long\"\r\n                        disabled={(end >= contentLength) ? true : false}\r\n                        onClick={() => this.onNextPage()}\r\n                        >\r\n                        <div className=\"inner\">next page</div>\r\n                    </button>    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a movie to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport MovieService from '../../services/MovieService';\r\n\r\nimport posterNotFound from '../../resources/img/movie-poster-coming-soon.png'\r\nimport './charInfo.scss';\r\n\r\ntype MyProps = {\r\n    selectedMovie: null | {id?: number};\r\n};\r\n\r\ntype MyState = {\r\n    movie: null | ViewProps; \r\n    loading: boolean;\r\n    error: boolean;\r\n};\r\n\r\nclass CharInfo extends Component<MyProps, MyState> {\r\n    state: MyState = {\r\n        movie: null,\r\n        loading: false,\r\n        error: false   \r\n    }\r\n\r\n    movieService = new MovieService();\r\n\r\n    componentDidMount() {\r\n        this.updateMovie();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: MyProps) {\r\n        if(this.props.selectedMovie !== prevProps.selectedMovie) {\r\n            this.updateMovie();\r\n        }\r\n    }\r\n\r\n    updateMovie = () => {\r\n        const {selectedMovie} = this.props;\r\n\r\n        if(!selectedMovie) {\r\n            return;\r\n        }\r\n        \r\n        this.onMovieLoading();\r\n        this.movieService.getMovie(selectedMovie.id)\r\n            .then(this.onMovieLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onMovieLoaded = (movie: ViewProps) => {\r\n        this.setState({\r\n            movie,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onMovieLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {movie, loading, error} = this.state;\r\n\r\n        const skeleton = movie || loading || error ? null : <Skeleton/>\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !movie) ? <View movie={movie}/> : null;\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ntype ViewProps = {\r\n        title: string;\r\n        overview: string;\r\n        release: string;\r\n        genres: {name: string}[];\r\n        poster: string;\r\n        homepage: string;\r\n}\r\n\r\nconst View = ({movie}: {movie: ViewProps}) => {\r\n    const {title, overview, release, genres, poster, homepage} = movie;\r\n    const genresName = genres.map(genre => genre.name).join(', ')\r\n    const posterImg = (poster === 'https://image.tmdb.org/t/p/w500null') ? posterNotFound : poster;\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={posterImg} alt={title}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{title}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\" target='_blanc'>\r\n                            <div className=\"inner\">\r\n                                {\r\n                                    homepage ? 'Homepage' : 'There is no homepage'\r\n                                }\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\"><b>Release:</b> {release}</div>\r\n            <div className=\"char__descr\"><b>Genres:</b> {genresName}</div>\r\n            <div className=\"char__descr\">{overview}</div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CharInfo;","import React, { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(err, info) {\r\n        console.log(err, info);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n             return <ErrorMessage />\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import { Component } from 'react';\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport SearchPanel from '../searchPanel/SearchPanel';\r\nimport AppFilter from '../appFilter/AppFilter';\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\ntype AppState = {\r\n    selectedMovie: null | {},\r\n    selectedGenre:string;\r\n    searchStr: string;\r\n}\r\nclass App extends Component<any, AppState> {\r\n    state: AppState = {\r\n        selectedMovie: null,\r\n        selectedGenre: '',\r\n        searchStr: ''\r\n    }\r\n    \r\n\r\n    onMovieSelected = (item: object) => {\r\n        this.setState({\r\n            selectedMovie: item\r\n        })\r\n    }\r\n\r\n    onGenreSelected = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        this.setState({\r\n            selectedGenre: e.target.value\r\n        })\r\n    }\r\n\r\n    onSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const searchStr = e.target.value;\r\n        this.setState({searchStr});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <div className=\"search__panel\">\r\n                    <SearchPanel onSearch={this.onSearch} searchStr={this.state.searchStr} />\r\n                    <AppFilter onGenreSelected={this.onGenreSelected} />\r\n                </div>\r\n                <main>\r\n                    <div className=\"char__content\">\r\n                        <ErrorBoundary>\r\n                           <CharList \r\n                                onMovieSelected={this.onMovieSelected}\r\n                                searchStr={this.state.searchStr}\r\n                                selectedGenre={this.state.selectedGenre} /> \r\n                        </ErrorBoundary>\r\n                        \r\n                        <ErrorBoundary>\r\n                            <CharInfo selectedMovie={this.state.selectedMovie} />\r\n                        </ErrorBoundary>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\n\r\nimport './style/style.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}